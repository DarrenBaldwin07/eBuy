{"remainingRequest":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/src/components/Item.vue?vue&type=template&id=1c4665c3","dependencies":[{"path":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/src/components/Item.vue","mtime":1639521318466},{"path":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSd3LTcyJz4KICAgICAgICA8ZGl2IGNsYXNzPSdzdG9yZUl0ZW0gZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgYmctd2hpdGUgcC00IHNoYWRvdy1sZyByb3VuZGVkLXhsIHctZnVsbCc+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9J3ctNDAgaC00MCBtLWF1dG8gcm91bmRlZC0yeGwnIDpzcmM9ImltZ1NyYyIgOmFsdD0idGl0bGUiPgogICAgICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0ndGV4dC14bCc+e3sgdGl0bGUgfX08L2gxPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSdmb250LWJvbGQnPiR7eyBwcmljZSB9fTwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nZmxleCBmbGV4LXJvdyBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG10LTInPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gQGNsaWNrPSdhZGRDYXJ0KCknIGNsYXNzPSdiZy1wcmltYXJ5MyB0ZXh0LXdoaXRlIHByLTMgcGwtMyBwYi0yIHB0LTIgcm91bmRlZC1tZCB0cmFuc2l0aW9uIGR1cmF0aW9uLTUwMCBlYXNlLWluLW91dCB0cmFuc2Zvcm0gaG92ZXI6LXRyYW5zbGF0ZS15LTEgaG92ZXI6c2NhbGUtMTEwJz48ZGl2IGNsYXNzPSdmbGV4IGZsZXgtcm93Jz48aW1nIHYtaWY9J3Nob3cnIGNsYXNzPSd3LTQgbXItMicgOnNyYz0iaW1nIiBhbHQ9IkNoZWNrbWFyayI+e3sgY2FydFRleHQgfX08L2Rpdj48L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0nbS0yIGJnLW9wYWNpdHktMTAgcC0xIHJvdW5kZWQtbWQnIDpjbGFzcz0ieyd0ZXh0LWdyZWVuLTUwMCBiZy1ncmVlbi02MDAnOiBzdG9jaywgJ3RleHQtcmVkLTUwMCBiZy1yZWQtNjAwJzogIXN0b2NrfSI+e3sgc3RvY2tUZXh0IH19PC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/src/components/Item.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC,CAAC;gBACA,CAAC,CAAC,CAAC,CAAC;oBACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxoBAChgBACrJ,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/JRDarrenbaldwin/Documents/Coding/Vue/vueCrud/vue-crud/src/components/Item.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class='w-72'>\n        <div class='storeItem flex flex-col items-center justify-center bg-white p-4 shadow-lg rounded-xl w-full'>\n            <div>\n                <div>\n                    <img class='w-40 h-40 m-auto rounded-2xl' :src=\"imgSrc\" :alt=\"title\">\n                    <h1 class='text-xl'>{{ title }}</h1>\n                    <p class='font-bold'>${{ price }}</p>\n                </div>\n                <div class='flex flex-row items-center justify-between mt-2'>\n                    <button @click='addCart()' class='bg-primary3 text-white pr-3 pl-3 pb-2 pt-2 rounded-md transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110'><div class='flex flex-row'><img v-if='show' class='w-4 mr-2' :src=\"img\" alt=\"Checkmark\">{{ cartText }}</div></button>\n                    <p class='m-2 bg-opacity-10 p-1 rounded-md' :class=\"{'text-green-500 bg-green-600': stock, 'text-red-500 bg-red-600': !stock}\">{{ stockText }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { supabase } from '../helpers/supabaseClient'\nimport checkmark from '../assets/images/checkMark.svg'\nexport default {\n    name: 'item',\n    props: {\n        imgSrc: String,\n        title: String,\n        price: String,\n        stock: Boolean,\n        id: Number,\n    },\n    \n    data() {\n        return {\n            stockText: this.stock ? 'In Stock' : 'Out of Stock',\n            userID: '',\n            show: false,\n            cartText: 'Add to Cart',\n            img: checkmark,\n        }\n    },\n\n    methods: {\n        async addCart() {\n            if (this.stock) {\n                this.userID = supabase.auth.user().id\n                await supabase.from('cart').insert([{user_id: String(this.userID), item: `${this.title}`, price: this.price, image: this.imgSrc}])\n                const { data } = await supabase.from('cart')\n                console.log(data)\n\n                this.show = true\n                this.cartText = 'Added to Cart'\n\n                setTimeout(() => {\n                    this.show = false\n                    this.cartText = 'Add to Cart'\n                }, 1500)\n            }\n        }\n    },\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}